name: Build and deploy

on:
  push:
    branches: [ "master" ]
  pull_request:

env:
  PROJECT_ID: burn-316412
  TF_VAR_environment: 'dev'
  TF_VAR_project_id: 'burn-316412'
  TF_VAR_region: 'europe-west1'
  TF_VAR_gcr_region: 'eu'
  TF_VAR_docker_tag: 'latest'
  TF_VAR_repository_name: 'dispoman-api'
  TF_VAR_db_instance_name: 'dev-dispoman-forge-postgres'
  TF_VAR_sharepoint_creds: ${{ secrets.SHAREPOINT_CREDS_DEV }}

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
          # Show only new issues if it's a pull request.
          # only-new-issues: true

  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - name: Install deps
      run: |
        make deps

    - name: Build the docker compose stack
      run: |
        make up

    - name: Build binary
      run: |
        make build

    - name: Test
      run: |
        make test

    - name: Build docs
      run: |
        make swag

    - name: Cleanup job
      if: always()
      run: |
        make clean

  deploy-dev:
    name: Deploy to dev
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [lint, build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install and set gcloud
      - name: Set up gcloud
        uses: 'google-github-actions/auth@v0'
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v0'

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Configure docker
        run: |
          gcloud auth configure-docker -q

      # Push image to Google Container Registry
      - name: Build Image
        run: |-
          echo "COMMIT=$(echo $GITHUB_SHA | head -c 7)" >> $GITHUB_ENV
          make dispoman-api_image_build

      - name: Push Image
        run: |-
          make dispoman-api_image_push

      - name: Checkout forge-gitops
        uses: actions/checkout@v3
        with:
          repository: efimovalex/forge-gitops
          ref: main
          token: ${{ secrets.GH_PAT }}
          path: deploy-tf

      - name: Terraform Init
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
        run: |-
          cd deploy-tf
          make dispoman-api_dev_tf_init

      - name: Terraform plan
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
        run: |-
          cd deploy-tf
          make dispoman-api_dev_tf_plan -e COMMIT=$COMMIT

      - name: Terraform apply
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
        run: |-
          cd deploy-tf
          make dispoman-api_dev_tf_apply

